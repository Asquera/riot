*0.10.10*

* Passing assertion macros can now return a custom message [dasch, jaknowlden]

    def evaluate(actual, *expectings)
      1 == 1 ? pass("1 does equal 1") : fail("1 does not equal 1 in this universe")
    end

* Removing Context#extend_assertions and related code [jaknowlden]

* Allow the use of symbolic descriptions as shorthands for sending the message to the topic [dasch]

    setup { "foo" }
    asserts(:upcase).equals("FOO")

* Added AssertionMacro and #register for macros [jaknowlden, splattael]

    module My
      class CustomThingAssertion < Riot::AssertionMacro
        register :custom_thing
        expects_exception!

        def evaluate(actual, *expectings)
          # ...
        end
      end
      
      Riot::Assertion.register_macro :custom_thing, CustomThingAssertion
    end

* Replace IOReporter#say with #puts. Also add #print. [splattael]

    class SomeNewReporter < IOReporter
      def pass
        puts "I PASSED"
      end

      def fail
        print "F"
      end
      # ...
    end

*0.10.9 and before*

See [commit log](http://github.com/thumblemonks/riot/commits/master)
